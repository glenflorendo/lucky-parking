version: "3.8"

# Services
services:
  adminer:
    image: adminer
    container_name: adminer
    depends_on:
      - database
    ports:
      - "8080:8080"
    restart: always
    networks:
      - bridge

  base:
    image: lucky-parking/base
    container_name: base
    build:
      context: .
      dockerfile: Dockerfile.legacy.dev
    stdin_open: true
    tty: true
    restart: always
    networks:
      - bridge
    volumes:
      - ./:/app
      - node-modules:/app/node_modules

  api-legacy:
    image: lucky-parking/api-legacy
    container_name: api-legacy
    build:
      context: .
      target: dev
      dockerfile: ./apps/api-legacy/Dockerfile
      args:
        NODE_ENV: "development"
      cache_from:
        - lucky-parking/base:latest
    ports:
      - "5000:5000"
    depends_on:
      - base
      - database
    environment:
      NODE_ENV: "development"
    restart: always
    networks:
      - bridge
    volumes:
      - ./:/app
      - node-modules:/app/node_modules

  client-legacy:
    image: lucky-parking/client-legacy
    container_name: client-legacy
    build:
      context: .
      target: dev
      dockerfile: ./apps/client-legacy/Dockerfile
      args:
        NODE_ENV: "development"
      cache_from:
        - lucky-parking/base:latest
    ports:
      - "4200:80"
    depends_on:
      - base
      - api-legacy
      - database
    environment:
      NODE_ENV: "development"
    restart: always
    networks:
      - bridge
    volumes:
      - ./:/app
      - node-modules:/app/node_modules

  database:
    image: postgis/postgis
    container_name: database
    ports:
      - "5432:5432"
    env_file: .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_HOST_AUTH_METHOD: md5
    restart: always
    networks:
      - bridge
    volumes:
      - db:/var/lib/postgresql/data
      - ./seed.sql:/docker-entrypoint-initdb.d/seed.sql

# Volumes
volumes:
  node-modules:
    name: lucky-parking/modules
    driver: local
  db:
    name: lucky-parking/db
    driver: local

# Networks
networks:
  bridge:
    name: lucky-parking/bridge
    driver: bridge
